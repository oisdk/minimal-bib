
@book{plotkin_handlers_????,
	title = {Handlers of Algebraic Effects},
	abstract = {Abstract. We present an algebraic treatment of exception handlers and, more generally, introduce handlers for other computational effects representable by an algebraic theory. These include nondeterminism, interactive input/output, concurrency, state, time, and their combinations; in all cases the computation monad is the free-model monad of the theory. Each such handler corresponds to a model of the theory for the effects at hand. The handling construct, which applies a handler to a computation, is based on the one introduced by Benton and Kennedy, and is interpreted using the homomorphism induced by the universal property of the free model. This general construct can be used to describe previously unrelated concepts from both theory and practice. 1},
	author = {Plotkin, Gordon and Pretnar, Matija},
}

@article{swierstra_data_2008,
	title = {Data types Ã  la carte},
	volume = {18},
	url = {http://cs.ru.nl/~wouters/Publications/DataTypesALaCarte.pdf},
	pages = {423--436},
	number = {4},
	journaltitle = {Journal of Functional Programming},
	author = {Swierstra, Wouter},
	urldate = {2016-06-06},
	date = {2008},
}

@article{uustalu_recursion_2011,
	title = {The Recursion Scheme from the Cofree Recursive Comonad},
	volume = {229},
	url = {http://cs.ioc.ee/~tarmo/papers/msfp08.pdf},
	pages = {135--157},
	number = {5},
	journaltitle = {Electronic Notes in Theoretical Computer Science ({ENTCS})},
	author = {Uustalu, Tarmo and Vene, Varmo},
	urldate = {2016-06-06},
	date = {2011},
}

@article{kammar_no_2016,
	title = {No value restriction is needed for algebraic effects and handlers},
	url = {http://arxiv.org/abs/1605.06938},
	abstract = {We present a straightforward, sound Hindley-Milner polymorphic type system for algebraic effects and handlers in a call-by-value calculus, which allows type variable generalisation of arbitrary computations, not just values. This result is surprising. On the one hand, the soundness of unrestricted call-by-value Hindley-Milner polymorphism is known to fail in the presence of computational effects such as reference cells and continuations. On the other hand, many programming examples can be recast to use effect handlers instead of these effects. Analysing the expressive power of effect handlers with respect to state effects, we claim handlers cannot express reference cells, and show they can simulate dynamically scoped state.},
	journaltitle = {{arXiv}:1605.06938 [cs]},
	author = {Kammar, Ohad and Pretnar, Matija},
	urldate = {2016-06-06},
	date = {2016-05-23},
	eprinttype = {arxiv},
	eprint = {1605.06938},
	keywords = {Computer Science - Logic in Computer Science, Computer Science - Programming Languages},
}

@article{bahr_composing_2014,
	title = {Composing and Decomposing Data Types},
	url = {http://bahr.io/pubs/files/bahr14stg-slides.pdf},
	journaltitle = {Proceedings of the 10th Acm Sigplan Workshop on Generic Programming},
	author = {Bahr, Patrick},
	urldate = {2016-06-13},
	date = {2014},
}